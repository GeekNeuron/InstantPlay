/* CSS Variables for Theming */
:root {
    /* Light Theme (Pure White) */
    --body-bg: #ffffff;
    --container-bg: #bbada0;
    --grid-bg: #cdc1b4;
    --grid-cell-bg: rgba(238, 228, 218, 0.35);
    --text-color-primary: #776e65;
    --text-color-secondary: #f9f6f2;
    --tile-default-bg: #eee4da;
    --tile-default-text: #776e65;
    --score-box-bg: #8f7a66;
    --score-box-text: #ffffff;
    --button-bg: #8f7a66;
    --button-text: #ffffff;
    --button-hover-bg: #776e65;
    --modal-bg: rgba(0,0,0,0.6);
    --modal-content-bg: #fefefe;
    --modal-text-color: #776e65;
    --border-color: var(--container-bg);

    --tile-2-bg: #eee4da;   --tile-2-text: #776e65;
    --tile-4-bg: #ede0c8;   --tile-4-text: #776e65;
    --tile-8-bg: #f2b179;   --tile-8-text: #f9f6f2;
    --tile-16-bg: #f59563;  --tile-16-text: #f9f6f2;
    --tile-32-bg: #f67c5f;  --tile-32-text: #f9f6f2;
    --tile-64-bg: #f65e3b;  --tile-64-text: #f9f6f2;
    --tile-128-bg: #edcf72; --tile-128-text: #f9f6f2;
    --tile-256-bg: #edcc61; --tile-256-text: #f9f6f2;
    --tile-512-bg: #edc850; --tile-512-text: #f9f6f2;
    --tile-1024-bg: #edc53f;--tile-1024-text: #f9f6f2;
    --tile-2048-bg: #edc22e;--tile-2048-text: #f9f6f2;
    --tile-4096-bg: #3c3a32;--tile-4096-text: #f9f6f2;
    --tile-super-bg: #3c3a32; --tile-super-text: #f9f6f2;

    --font-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;
    --border-radius: 10px;
    --gap-size: 12px;
    --grid-side-length-desktop: 400px; /* Use one variable for square grid */
}

/* Dark Theme Variables (Dark Blue) */
body.dark-theme {
    --body-bg: #0d1117;
    --container-bg: #161b22;
    --grid-bg: #1e2732;
    --grid-cell-bg: #2c3a47;
    --text-color-primary: #c9d1d9;
    --text-color-secondary: #0d1117;
    --tile-default-bg: #293b5f;
    --tile-default-text: #e0e6eb;
    --score-box-bg: #274c77;
    --score-box-text: #e0e6eb;
    --button-bg: #3282b8;
    --button-text: #ffffff;
    --button-hover-bg: #1d4357;
    --modal-bg: rgba(10, 10, 15, 0.7);
    --modal-content-bg: #161b22;
    --modal-text-color: #c9d1d9;
    --border-color: var(--container-bg);

    --tile-2-bg: #2c3e50;   --tile-2-text: #ecf0f1;
    --tile-4-bg: #34495e;   --tile-4-text: #ecf0f1;
    --tile-8-bg: #1abc9c;   --tile-8-text: #0d1117;
    --tile-16-bg: #2ecc71;  --tile-16-text: #0d1117;
    --tile-32-bg: #3498db;  --tile-32-text: #f9f6f2;
    --tile-64-bg: #9b59b6;  --tile-64-text: #f9f6f2;
    --tile-128-bg: #f1c40f; --tile-128-text: #0d1117;
    --tile-256-bg: #e67e22; --tile-256-text: #f9f6f2;
    --tile-512-bg: #e74c3c; --tile-512-text: #f9f6f2;
    --tile-1024-bg: #62DAFB;--tile-1024-text: #0d1117;
    --tile-2048-bg: #f39c12;--tile-2048-text: #0d1117;
    --tile-super-bg: #00008B; --tile-super-text: #f9f6f2;
}

/* General Styles */
html {
    box-sizing: border-box; /* Apply box-sizing to html for easier calculations */
    -webkit-tap-highlight-color: transparent; /* Remove tap highlight on mobile */
}
*, *:before, *:after {
    box-sizing: inherit; /* Inherit box-sizing from html */
}

body {
    font-family: var(--font-family);
    background-color: var(--body-bg);
    color: var(--text-color-primary);
    margin: 0;
    padding: 20px;
    padding-top: 70px;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    text-align: center;
    transition: background-color 0.3s ease, color 0.3s ease;
    overflow-x: hidden; /* Prevent horizontal scroll */
}

.top-bar {
    position: fixed;
    top: 15px;
    right: 15px;
    z-index: 1001;
}

#theme-switcher {
    background: none;
    border: none;
    padding: 8px; /* Slightly more touch area */
    font-size: 1.8em;
    cursor: pointer;
    color: var(--text-color-primary);
    outline: none;
    transition: color 0.3s ease, transform 0.2s ease;
    line-height: 1; /* Ensure icon is centered */
}
#theme-switcher:hover {
    transform: scale(1.1);
}
#theme-switcher::before {
    content: 'üåô';
}
body.dark-theme #theme-switcher::before {
    content: '‚òÄÔ∏è';
}

.container {
    background-color: var(--container-bg);
    padding: 20px;
    border-radius: var(--border-radius);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: background-color 0.3s ease;
    max-width: calc(var(--grid-side-length-desktop) + 40px);
    width: 100%;
}

header {
    margin-bottom: 20px;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
}

header h1 {
    font-size: 3.5em;
    margin: 0.1em 0 0.3em 0;
    font-weight: bold;
    color: var(--text-color-primary);
}

.scores-container {
    display: flex;
    justify-content: center;
    gap: var(--gap-size);
    margin-bottom: 20px;
    flex-wrap: wrap; /* Allow score boxes to wrap on small screens if needed */
}

.score-box {
    background-color: var(--score-box-bg);
    color: var(--score-box-text);
    padding: 10px 20px;
    border-radius: var(--border-radius);
    font-size: 1.2em;
    min-width: 100px;
    text-align: center;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.btn {
    background-color: var(--button-bg);
    color: var(--button-text);
    border: none;
    padding: 12px 25px;
    border-radius: var(--border-radius);
    font-size: 1.1em;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.1s ease;
    user-select: none; /* Prevent text selection on buttons */
}
.btn:hover {
    background-color: var(--button-hover-bg);
    transform: translateY(-2px);
}
.btn:active {
    transform: translateY(0px);
}

.grid-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    gap: var(--gap-size);
    width: var(--grid-side-length-desktop);
    height: var(--grid-side-length-desktop);
    background-color: var(--grid-bg);
    border-radius: var(--border-radius);
    position: relative;
    transition: background-color 0.3s ease;
    padding: var(--gap-size);
}

.grid-cell {
    background-color: var(--grid-cell-bg);
    border-radius: calc(var(--border-radius) / 1.5);
    transition: background-color 0.3s ease;
}

.tile {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    border-radius: var(--border-radius);
    transition: transform 0.15s cubic-bezier(0.25, 0.1, 0.25, 1), 
                background-color 0.15s ease-in-out, 
                color 0.15s ease-in-out, 
                opacity 0.15s ease-in-out;
    animation: appear 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);
    user-select: none; /* Prevent text selection on tiles */
}

@keyframes appear {
    from { transform: scale(0.5) translate(var(--translateX, 0), var(--translateY, 0)); opacity: 0; }
    to { transform: scale(1) translate(var(--translateX, 0), var(--translateY, 0)); opacity: 1; }
}

.tile.tile-merged {
    animation: pop 0.2s cubic-bezier(0.25, 0.1, 0.25, 1) 0.05s;
}

@keyframes pop {
    0% { transform: scale(1) translate(var(--translateX, 0), var(--translateY, 0)); }
    50% { transform: scale(1.25) translate(var(--translateX, 0), var(--translateY, 0)); }
    100% { transform: scale(1) translate(var(--translateX, 0), var(--translateY, 0)); }
}

.tile[data-value="2"]    { background-color: var(--tile-2-bg); color: var(--tile-2-text); }
.tile[data-value="4"]    { background-color: var(--tile-4-bg); color: var(--tile-4-text); }
.tile[data-value="8"]    { background-color: var(--tile-8-bg); color: var(--tile-8-text); }
.tile[data-value="16"]   { background-color: var(--tile-16-bg); color: var(--tile-16-text); }
.tile[data-value="32"]   { background-color: var(--tile-32-bg); color: var(--tile-32-text); }
.tile[data-value="64"]   { background-color: var(--tile-64-bg); color: var(--tile-64-text); }
.tile[data-value="128"]  { background-color: var(--tile-128-bg); color: var(--tile-128-text); }
.tile[data-value="256"]  { background-color: var(--tile-256-bg); color: var(--tile-256-text); }
.tile[data-value="512"]  { background-color: var(--tile-512-bg); color: var(--tile-512-text); }
.tile[data-value="1024"] { background-color: var(--tile-1024-bg); color: var(--tile-1024-text); }
.tile[data-value="2048"] { background-color: var(--tile-2048-bg); color: var(--tile-2048-text); }
.tile[data-value="4096"],
.tile[data-value="8192"] { background-color: var(--tile-super-bg); color: var(--tile-super-text); }

.modal {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: var(--modal-bg);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0s linear 0.3s;
}
.modal.show {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease, visibility 0s linear 0s;
}

.modal-content {
    background-color: var(--modal-content-bg);
    padding: 30px 40px;
    border-radius: var(--border-radius);
    text-align: center;
    box-shadow: 0 5px 20px rgba(0,0,0,0.25);
    color: var(--modal-text-color);
    transform: scale(0.9);
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
}
.modal.show .modal-content {
    transform: scale(1);
}

.modal-content h2 {
    margin-top: 0;
    font-size: 2em;
    margin-bottom: 15px;
}
.modal-content p {
    font-size: 1.2em;
    margin-bottom: 25px;
}

footer {
    margin-top: 30px;
    padding-bottom: 20px;
    font-size: 0.9em;
    color: var(--text-color-primary);
    transition: color 0.3s ease;
}

/* Responsive adjustments for square grid on mobile */
@media (max-width: 520px) {
    body {
        padding: 10px;
        padding-top: 60px;
    }
    .container {
        padding: 15px;
    }
    header h1 {
        font-size: 2.5em; /* Slightly smaller h1 on mobile */
    }
    .scores-container {
        flex-direction: column;
        gap: 8px;
        margin-bottom: 15px;
    }
    .score-box {
        font-size: 1em;
        padding: 8px 15px;
        min-width: 90px;
    }
    .grid-container {
        /* Calculate width to be 90% of viewport width OR height, whichever is smaller, minus padding */
        /* This is hard to do purely in CSS for a square. JS might be needed for perfect square based on smaller dimension. */
        /* Simpler: Use vw for width, and aspect-ratio if supported, or fixed relation to width. */
        width: 90vw; 
        height: 90vw; /* This makes it square based on width */
        max-width: var(--grid-side-length-desktop); /* Cap at desktop size if 90vw is larger */
        max-height: var(--grid-side-length-desktop);
        margin-left: auto;
        margin-right: auto;
        padding: calc(var(--gap-size) * 0.8); /* Slightly smaller gap/padding on mobile */
    }
    
    .btn {
        padding: 10px 20px;
        font-size: 1em;
    }

    .modal-content {
        width: 85%;
        padding: 20px;
    }
    .modal-content h2 { font-size: 1.8em; }
    .modal-content p { font-size: 1.1em; }
}

@media (max-width: 360px) { /* Even smaller screens */
    header h1 {
        font-size: 2.2em;
    }
    .grid-container {
        padding: calc(var(--gap-size) * 0.7);
    }
     .btn {
        padding: 8px 15px;
        font-size: 0.9em;
    }
}
